{"version":3,"file":"static/js/762.ecba8d8c.chunk.js","mappings":"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","sources":["webpack://camping_rent_in_ua/./src/components/Form/FormSubmit.module.css?3460","components/Form/FormSubmit.jsx","webpack://camping_rent_in_ua/./src/components/ReviewsBox/ReviewItem.module.css?ef52","components/ReviewsBox/StarRating.jsx","components/ReviewsBox/ReviewItem.jsx","components/ReviewsBox/ReviewsBox.jsx","components/Reviews/Reviews.jsx","webpack://camping_rent_in_ua/./src/components/Features/Features.module.css?7a79","../node_modules/nanoid/index.browser.js","../node_modules/nanoid/url-alphabet/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"FormSubmit_container__jO93u\",\"title_form\":\"FormSubmit_title_form__416DY\",\"text_form\":\"FormSubmit_text_form__q9jod\",\"form_box\":\"FormSubmit_form_box__xrqkQ\",\"input_form\":\"FormSubmit_input_form__ZTqMi\",\"error_input\":\"FormSubmit_error_input__p6FdA\",\"error\":\"FormSubmit_error__yvNyo\",\"date_input\":\"FormSubmit_date_input__FhUKT\",\"send_button\":\"FormSubmit_send_button__UkEc1\"};","import { Formik } from \"formik\"\r\nimport styles from \"./FormSubmit.module.css\"\r\nimport * as Yup from \"yup\"\r\n// import sprite from \"../images/sprite.svg\"\r\n\r\nexport const FormSubmit = () => {\r\n    return (\r\n            <Formik\r\n                initialValues={{\r\n                    name: '',\r\n                    email: '',\r\n                    bookingDate: '',\r\n                    comment: '',\r\n                }}\r\n                validationSchema={Yup.object().shape({\r\n                    name: Yup.string()\r\n                        .min(3, \"Must be at least 3 characters\")\r\n                        .max(20, \"Must be less or equal 20 characters\")\r\n                        .required(\"Name is required\"),\r\n                    email: Yup.string().email(\"Invalid email adress\").required(\"Email is required\"),\r\n                    bookingDate: Yup.date().required(\"Required\"),\r\n                    comment: Yup.string().min(3)\r\n                })}\r\n                onSubmit={(values, { setSubmitting, resetForm }) => {\r\n                    console.log(values);\r\n                    resetForm();\r\n                }}>\r\n                \r\n               {(formik) => {\r\n        const {\r\n          values,\r\n          handleChange,\r\n          handleSubmit,\r\n          errors,\r\n          touched,\r\n          handleBlur,\r\n          isValid,\r\n        } = formik;\r\n        return (\r\n            <div className={styles.container}>\r\n                <h2 className={styles.title_form}>Book your campervan now</h2>\r\n                <p className={styles.text_form}>Stay connected! We are always ready to help you.</p>\r\n                <form onSubmit={handleSubmit} className={styles.form_box}>\r\n                    <input\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    id=\"name\"\r\n                    placeholder=\"Name\"\r\n                    className={errors.name && touched.name ? styles.error_input : styles.input_form}\r\n                    value={values.name}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                  />\r\n                  {errors.name && touched.name && (\r\n                    <span className={styles.error}>{errors.name}</span>\r\n                  )}\r\n                  <input\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    id=\"email\"\r\n                    className={errors.email && touched.email ? styles.error_input : styles.input_form}\r\n                    placeholder=\"Email\"\r\n                    value={values.email}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                  />\r\n                  {errors.email && touched.email && (\r\n                    <span className={styles.error}>{errors.email}</span>\r\n                    )}\r\n                    <input\r\n                    type=\"date\"\r\n                    name=\"bookingDate\"\r\n                    id=\"bookingDate\"\r\n                    className={errors.bookingDate && touched.bookingDate ? `${styles.error_input} ${styles.date_input}` : `${styles.input_form} ${styles.date_input}`}\r\n                    // value={Date.now}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                        />\r\n                    {/* <button className={styles.bookingDate_btn}><svg width=\"20\" height=\"20\"><use href={sprite + \"#icon-Button\"} /></svg></button>     */}\r\n                    {errors.bookingDate && touched.bookingDate && (\r\n                    <span className={styles.error}>{errors.bookingDate}</span>\r\n                  )}\r\n                    <input\r\n                    type=\"textaria\"\r\n                    name=\"comment\"\r\n                    id=\"comment\"\r\n                    className={errors.comment && touched.comment ? styles.error_input : styles.input_form}\r\n                    placeholder=\"Comment\"\r\n                    value={values.comment}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    />\r\n                  {errors.comment && touched.comment && (\r\n                    <span className={styles.error}>{errors.comment}</span>\r\n                  )}\r\n\r\n                <button\r\n                  type=\"submit\"\r\n                  className={styles.send_button}\r\n                  disabled={!(isValid)}>\r\n                  Send\r\n                </button>\r\n              </form>\r\n            </div>\r\n        );\r\n      }}\r\n                </Formik>\r\n        \r\n    )\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"review_item\":\"ReviewItem_review_item__mbqvV\",\"name_box\":\"ReviewItem_name_box__XybAj\",\"name_pict\":\"ReviewItem_name_pict__KcL82\",\"name_item\":\"ReviewItem_name_item__upvbL\",\"stars_box\":\"ReviewItem_stars_box__vbJ2R\",\"comment\":\"ReviewItem_comment__DEdHG\"};","import styles from \"./ReviewItem.module.css\"\r\nimport sprite from \"../images/sprite.svg\"\r\n\r\nexport const StarRating = ({rating=5}) => {\r\n    const yellowStars = Array(rating).fill(0);\r\n    const grayStars = Array(5 - rating).fill(0);\r\n    return (\r\n        <ul className={styles.stars_box}>\r\n            {(yellowStars.length > 0) && yellowStars.map(star => (<li><svg width=\"16\" height=\"16\"><use href={sprite + \"#icon-Star\"} /></svg></li>))}\r\n            {(grayStars.length > 0) && grayStars.map(star => (<li><svg width=\"16\" height=\"16\"><use href={sprite + \"#icon-Star-gray\"} /></svg></li>))}\r\n        </ul>\r\n    )\r\n}","import styles from \"./ReviewItem.module.css\"\r\nimport { StarRating } from \"./StarRating\"\r\n\r\nexport const ReviewItem = ({ review }) => {\r\n    return (<li className={styles.review_item}>\r\n        <div className={styles.name_box}>\r\n            <span className={styles.name_pict}>{review.reviewer_name[0]}</span>\r\n            <div>\r\n            <p className={styles.name_item}>{review.reviewer_name}</p>\r\n            < StarRating rating={review.reviewer_rating} />\r\n            </div>\r\n        </div>\r\n        <p className={styles.comment}>{review.comment}</p>\r\n    </li>)\r\n}","import { useSelector } from \"react-redux\"\r\nimport { ReviewItem } from \"./ReviewItem\"\r\nimport { selectCurrent } from \"../../redux/favorites/favoriteSelectors\"\r\nimport { nanoid } from \"nanoid\";\r\n\r\nexport const ReviewsBox = () => {\r\n    const { reviews } = useSelector(selectCurrent);\r\n    return (\r\n        reviews && (<ul>\r\n            {reviews.map(review => (<ReviewItem key={nanoid()} review={review} />))}\r\n        </ul>)\r\n    )\r\n}","import { FormSubmit } from \"../Form/FormSubmit\";\r\nimport styles from \"../Features/Features.module.css\"\r\nimport { ReviewsBox } from \"../ReviewsBox/ReviewsBox\";\r\n\r\nconst Reviews = () => {\r\n    return (\r\n        <div className={styles.features_box}>\r\n            <div>\r\n                <ReviewsBox />\r\n            </div>\r\n            <FormSubmit />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Reviews;","// extracted by mini-css-extract-plugin\nexport default {\"features_box\":\"Features_features_box__-TqI-\"};","import { urlAlphabet as scopedUrlAlphabet } from './url-alphabet/index.js'\nexport { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    id += scopedUrlAlphabet[bytes[size] & 63]\n  }\n  return id\n}\n","export const urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'\n"],"names":["FormSubmit","_jsx","Formik","initialValues","name","email","bookingDate","comment","validationSchema","Yup","shape","min","max","required","onSubmit","values","_ref","setSubmitting","resetForm","console","log","children","formik","handleChange","handleSubmit","errors","touched","handleBlur","isValid","_jsxs","className","styles","type","id","placeholder","value","onChange","onBlur","concat","disabled","StarRating","rating","yellowStars","Array","fill","grayStars","length","map","star","width","height","href","sprite","ReviewItem","review","reviewer_name","reviewer_rating","ReviewsBox","reviews","useSelector","selectCurrent","nanoid","Reviews","features_box","size","arguments","undefined","bytes","crypto","getRandomValues","Uint8Array"],"sourceRoot":""}