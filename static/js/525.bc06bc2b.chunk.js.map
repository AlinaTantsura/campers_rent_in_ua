{"version":3,"file":"static/js/525.bc06bc2b.chunk.js","mappings":"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","sources":["webpack://camping_rent_in_ua/./src/components/Form/FormSubmit.module.css?3460","components/Form/FormSubmit.jsx","webpack://camping_rent_in_ua/./src/components/ReviewsBox/ReviewItem.module.css?ef52","components/ReviewsBox/ReviewItem.jsx","components/ReviewsBox/ReviewsBox.jsx","components/Reviews/Reviews.jsx","webpack://camping_rent_in_ua/./src/components/Features/Features.module.css?7a79","../node_modules/nanoid/index.browser.js","../node_modules/nanoid/url-alphabet/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"FormSubmit_container__jO93u\",\"title_form\":\"FormSubmit_title_form__416DY\",\"text_form\":\"FormSubmit_text_form__q9jod\",\"form_box\":\"FormSubmit_form_box__xrqkQ\",\"input_form\":\"FormSubmit_input_form__ZTqMi\",\"error_input\":\"FormSubmit_error_input__p6FdA\",\"error\":\"FormSubmit_error__yvNyo\",\"date_input\":\"FormSubmit_date_input__FhUKT\",\"send_button\":\"FormSubmit_send_button__UkEc1\"};","import { Formik } from \"formik\"\r\nimport styles from \"./FormSubmit.module.css\"\r\nimport * as Yup from \"yup\"\r\nimport sprite from \"../images/sprite.svg\"\r\n\r\nexport const FormSubmit = () => {\r\n    return (\r\n            <Formik\r\n                initialValues={{\r\n                    name: '',\r\n                    email: '',\r\n                    bookingDate: '',\r\n                    comment: '',\r\n                }}\r\n                validationSchema={Yup.object().shape({\r\n                    name: Yup.string()\r\n                        .min(3, \"Must be at least 3 characters\")\r\n                        .max(20, \"Must be less or equal 20 characters\")\r\n                        .required(\"Name is required\"),\r\n                    email: Yup.string().email(\"Invalid email adress\").required(\"Email is required\"),\r\n                    bookingDate: Yup.date().required(\"Required\"),\r\n                    comment: Yup.string().min(3)\r\n                })}\r\n                onSubmit={(values, { setSubmitting, resetForm }) => {\r\n                    console.log(values);\r\n                    resetForm();\r\n                }}>\r\n                \r\n               {(formik) => {\r\n        const {\r\n          values,\r\n          handleChange,\r\n          handleSubmit,\r\n          errors,\r\n          touched,\r\n          handleBlur,\r\n          isValid,\r\n          dirty\r\n        } = formik;\r\n        return (\r\n            <div className={styles.container}>\r\n                <h2 className={styles.title_form}>Book your campervan now</h2>\r\n                <p className={styles.text_form}>Stay connected! We are always ready to help you.</p>\r\n                <form onSubmit={handleSubmit} className={styles.form_box}>\r\n                    <input\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    id=\"name\"\r\n                    placeholder=\"Name\"\r\n                    className={errors.name && touched.name ? styles.error_input : styles.input_form}\r\n                    value={values.name}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                  />\r\n                  {errors.name && touched.name && (\r\n                    <span className={styles.error}>{errors.name}</span>\r\n                  )}\r\n                  <input\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    id=\"email\"\r\n                    className={errors.email && touched.email ? styles.error_input : styles.input_form}\r\n                    placeholder=\"Email\"\r\n                    value={values.email}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                  />\r\n                  {errors.email && touched.email && (\r\n                    <span className={styles.error}>{errors.email}</span>\r\n                    )}\r\n                    <input\r\n                    type=\"date\"\r\n                    name=\"bookingDate\"\r\n                    id=\"bookingDate\"\r\n                    className={errors.bookingDate && touched.bookingDate ? `${styles.error_input} ${styles.date_input}` : `${styles.input_form} ${styles.date_input}`}\r\n                    value={Date.now}\r\n                    // value={values.bookingDate}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                        />\r\n                    {/* <button className={styles.bookingDate_btn}><svg width=\"20\" height=\"20\"><use href={sprite + \"#icon-Button\"} /></svg></button>     */}\r\n                    {errors.bookingDate && touched.bookingDate && (\r\n                    <span className={styles.error}>{errors.bookingDate}</span>\r\n                  )}\r\n                    <input\r\n                    type=\"textaria\"\r\n                    name=\"comment\"\r\n                    id=\"comment\"\r\n                    className={errors.comment && touched.comment ? styles.error_input : styles.input_form}\r\n                    placeholder=\"Comment\"\r\n                    value={values.comment}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    />\r\n                  {errors.comment && touched.comment && (\r\n                    <span className={styles.error}>{errors.comment}</span>\r\n                  )}\r\n\r\n                <button\r\n                  type=\"submit\"\r\n                  className={styles.send_button}\r\n                  disabled={!(isValid)}>\r\n                  Send\r\n                </button>\r\n              </form>\r\n            </div>\r\n        );\r\n      }}\r\n                </Formik>\r\n        \r\n    )\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"review_item\":\"ReviewItem_review_item__mbqvV\",\"name_box\":\"ReviewItem_name_box__XybAj\",\"name_pict\":\"ReviewItem_name_pict__KcL82\",\"name_item\":\"ReviewItem_name_item__upvbL\",\"comment\":\"ReviewItem_comment__DEdHG\"};","import styles from \"./ReviewItem.module.css\"\r\nimport sprite from \"../images/sprite.svg\"\r\n\r\nexport const ReviewItem = ({ review }) => {\r\n    return (<li className={styles.review_item}>\r\n        <div className={styles.name_box}>\r\n        <span className={styles.name_pict}>{review.reviewer_name[0]}</span>\r\n            <p className={styles.name_item}>{review.reviewer_name}\r\n                <span><svg width=\"16\" height=\"16\"><use href={sprite + \"#icon-Star\"} /></svg>\r\n                    <svg width=\"16\" height=\"16\"><use href={sprite + \"#icon-Star\"} /></svg>\r\n                    <svg width=\"16\" height=\"16\"><use href={sprite + \"#icon-Star\"} /></svg>\r\n                    <svg width=\"16\" height=\"16\"><use href={sprite + \"#icon-Star\"} /></svg>\r\n                    <svg width=\"16\" height=\"16\"><use href={sprite + \"#icon-Star\"} /></svg>\r\n                </span></p>\r\n        </div>\r\n        <p className={styles.comment}>{review.comment}</p>\r\n    </li>)\r\n}","import { useSelector } from \"react-redux\"\r\nimport { ReviewItem } from \"./ReviewItem\"\r\nimport { selectCurrent } from \"../../redux/favorites/favoriteSelectors\"\r\nimport { nanoid } from \"nanoid\";\r\n\r\nexport const ReviewsBox = () => {\r\n    const { reviews } = useSelector(selectCurrent);\r\n    console.log(reviews)\r\n    return (\r\n        reviews && (<ul>\r\n            {reviews.map(review => (<ReviewItem key={nanoid()} review={review} />))}\r\n        </ul>)\r\n    )\r\n}","import { FormSubmit } from \"../Form/FormSubmit\";\r\nimport styles from \"../Features/Features.module.css\"\r\nimport { ReviewsBox } from \"../ReviewsBox/ReviewsBox\";\r\n\r\nconst Reviews = () => {\r\n    return (\r\n        <div className={styles.features_box}>\r\n            <div>\r\n                <ReviewsBox />\r\n            </div>\r\n            <FormSubmit />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Reviews;","// extracted by mini-css-extract-plugin\nexport default {\"features_box\":\"Features_features_box__-TqI-\"};","import { urlAlphabet as scopedUrlAlphabet } from './url-alphabet/index.js'\nexport { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    id += scopedUrlAlphabet[bytes[size] & 63]\n  }\n  return id\n}\n","export const urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'\n"],"names":["FormSubmit","_jsx","Formik","initialValues","name","email","bookingDate","comment","validationSchema","Yup","shape","min","max","required","onSubmit","values","_ref","setSubmitting","resetForm","console","log","children","formik","handleChange","handleSubmit","errors","touched","handleBlur","isValid","dirty","_jsxs","className","styles","type","id","placeholder","value","onChange","onBlur","concat","Date","now","disabled","ReviewItem","review","reviewer_name","width","height","href","sprite","ReviewsBox","reviews","useSelector","selectCurrent","map","nanoid","Reviews","features_box","size","arguments","length","undefined","bytes","crypto","getRandomValues","Uint8Array"],"sourceRoot":""}