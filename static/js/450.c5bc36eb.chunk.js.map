{"version":3,"file":"static/js/450.c5bc36eb.chunk.js","mappings":"gLAAO,MAAMA,EAAaC,GAASA,EAAMC,QAAQC,MACpCC,EAAkBH,GAASA,EAAMC,QAAQE,gBACzCC,EAAcJ,GAASA,EAAMC,QAAQI,M,aCsClD,QAnCA,WACI,MAAMC,GAAWC,EAAAA,EAAAA,MACXN,GAAUO,EAAAA,EAAAA,IAAYT,GACtBU,GAAYD,EAAAA,EAAAA,IAAYL,GAO9B,OANcK,EAAAA,EAAAA,IAAYJ,IAE1BM,EAAAA,EAAAA,YAAU,KACNJ,GAASK,EAAAA,EAAAA,KAAY,GACtB,CAACL,IAGAG,GAAaG,EAAAA,EAAAA,KAAA,KAAAC,SAAG,iBACZC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACAD,EAAAA,EAAAA,KAAA,SAAOG,QAAQ,WAAUF,SAAC,cACtBD,EAAAA,EAAAA,KAAA,SAAOI,KAAK,WAAWC,KAAK,UAC5BL,EAAAA,EAAAA,KAAA,MAAAC,SAAI,aACJD,EAAAA,EAAAA,KAAA,MAAAC,SAAI,uBACJC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACID,EAAAA,EAAAA,KAAA,OAAKM,UAAU,OAAML,UAACD,EAAAA,EAAAA,KAAA,OAAKM,UAAU,OAAOC,KAAK,gDACjDL,EAAAA,EAAAA,MAAA,UAAQG,KAAK,SAAQJ,SAAA,EAACD,EAAAA,EAAAA,KAAA,OAAAC,UAAKD,EAAAA,EAAAA,KAAA,OAAKO,KAAK,gDAAoD,SACzFP,EAAAA,EAAAA,KAAA,UAAQK,KAAK,YACbL,EAAAA,EAAAA,KAAA,UAAQK,KAAK,YACbL,EAAAA,EAAAA,KAAA,UAAQK,KAAK,YACbL,EAAAA,EAAAA,KAAA,UAAQK,KAAK,eAEjBL,EAAAA,EAAAA,KAAA,MAAAC,SAAI,kBAEJD,EAAAA,EAAAA,KAAA,MAAAC,SACJZ,EAAQmB,KAAIC,IAAWT,EAAAA,EAAAA,KAAA,MAAAC,SAAqBQ,EAAOL,MAAnBK,EAAOC,UAKnD,C","sources":["redux/selectors.js","pages/CatalogPage.jsx"],"sourcesContent":["export const selectData = state => state.adverts.items;\r\nexport const selectIsLoading = state => state.adverts.selectIsLoading;\r\nexport const selectError = state => state.adverts.error;\r\n","import { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchData } from \"../redux/operations\";\r\nimport { selectData, selectError, selectIsLoading } from \"../redux/selectors\";\r\n\r\nfunction CatalogPage() {\r\n    const dispatch = useDispatch();\r\n    const adverts = useSelector(selectData);\r\n    const isLoading = useSelector(selectIsLoading);\r\n    const error = useSelector(selectError);\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchData());\r\n    }, [dispatch])\r\n\r\n    return (\r\n        isLoading ? (<p>Loading....</p>) : \r\n            <div>\r\n            <label htmlFor=\"location\">Location</label>\r\n                <input name='location' type=\"text\" />\r\n                <h3>Filters</h3>\r\n                <h4>Vehicle equipment</h4>\r\n                <div>\r\n                    <svg className=\"icon\"><use className=\"icon\" href=\"./symbol-defs.svg#icon-arcticons_freezer\" /></svg>\r\n                    <button type=\"button\"><svg><use href=\"../symbol-defs.svg#icon-arcticons_freezer\" /></svg>AC</button>\r\n                    <button type=\"button\"></button>\r\n                    <button type=\"button\"></button>\r\n                    <button type=\"button\"></button>\r\n                    <button type=\"button\"></button>\r\n                </div>\r\n                <h4>Vehicle type</h4>\r\n\r\n                <ul>{\r\n            adverts.map(advert => (<li key={advert.id}>{advert.name}</li>))\r\n            }\r\n                </ul>\r\n                </div>\r\n    )\r\n};\r\n\r\nexport default CatalogPage;"],"names":["selectData","state","adverts","items","selectIsLoading","selectError","error","dispatch","useDispatch","useSelector","isLoading","useEffect","fetchData","_jsx","children","_jsxs","htmlFor","name","type","className","href","map","advert","id"],"sourceRoot":""}